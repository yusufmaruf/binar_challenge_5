{
  "openapi": "3.0.1",
  "info": {
    "title": "REST API for Swagger Documentation",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "NotFound": {
            "type": "object",
            "properties": {
              "error": {
                "type": "string",
                "description": "Resource not found error message"
              }
            }
          },
      "Car": {
        "type": "object",
        "properties": {
          "plate": {
            "type": "string"
          },
          "manufacture": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "rentPerDay": {
            "type": "number"
          },
          "capacity": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "availableAt": {
            "type": "string",
            "format": "date-time"
          },
          "transmission": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "specs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "plate",
          "manufacture",
          "model",
          "image",
          "rentPerDay",
          "capacity",
          "description",
          "availableAt",
          "transmission",
          "available",
          "type",
          "year",
          "options",
          "specs"
        ]
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Bad request error message"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Unauthorized error message"
          }
        }
      },
      "InternalError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Internal Server Error message"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "schemes": ["http"],
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login and get an authentication token",
        "consumes": ["application/x-www-form-urlencoded"],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Authentication token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "consumes": ["application/x-www-form-urlencoded"],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "user's name"
                  },
                  "email": {
                    "type": "string",
                    "description": "user's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "user's password"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/RegistrationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Email already registered or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/RegistrationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/createadmin": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Create an admin user",
        "security": [
          {
            "bearerAuth": []  
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Admin's name"
                  },
                  "email": {
                    "type": "string",
                    "description": "Admin's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "Admin's password"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin user created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/RegistrationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Email already registered or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/RegistrationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/InternalError"
                }
              }
            }
          }
        }
      }
    },


    "/cars": {
      "get": {
        "tags": ["cars"],
        "summary": "Get all cars",
        "responses": {
          "200": {
            "description": "A list of cars"
          }
        }
      },
      "post": {
        "tags": ["cars"],
        "summary": "Create a new car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Car created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": ["cars"],
        "summary": "Get a car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get a car"
          },
          "404": {
            "description": "Car not found"
          }
        }
      },
      "patch": {
        "tags": ["cars"],
        "summary": "Update a car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the car to be updated"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Car updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["cars"],
        "summary": "Soft delete a car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the car to be soft-deleted"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Car soft-deleted successfully"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/filtered-cars": {
  "get": {
    "tags": ["cars"],
    "summary": "Get filtered cars",
    "parameters": [
      {
        "name": "date",
        "in": "query",
        "description": "Filter cars available after this date",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      {
        "name": "capacity",
        "in": "query",
        "description": "Filter cars by capacity",
        "schema": {
          "type": "integer"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Filtered cars retrieved successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cars": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"  
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BadRequest"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InternalError"
            }
          }
        }
      }
    }
  }
}


  },
  
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "User's name"
        },
        "email": {
          "type": "string",
          "description": "User's email address"
        },
        "password": {
          "type": "string",
          "description": "User's password"
        }
      }
    },
    "RegistrationSuccess": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "User registered successfully"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "RegistrationError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Email already registered or validation error"
        }
      }
    },
    "InternalError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Internal Server Error"
        }
      }
    }
  }
}
